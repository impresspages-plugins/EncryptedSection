
# Add new encrypted section

1. Admin adds encrypted section from toolbar
2. Empty section with red background is added
3. Ask for password with bootstap modal() popup.  See HTML Widget: html.js   
   User *must* enter a password.
   click OK => store pwd in local JS instance of widget (this)   
4. Unlock section, so that user can enter content.      Add TinyMCE editor.
5. onChange is called regularly, encrypt and save({encryptedText: encrypted});
6. Publish

# Show and edit already existing encrypted section in admin mode

1. Admin shows page with encrypted section
2. init() is called but now this.password is not set
3. when user clicks section
3  a) if password is not yet set, then ask for password, store it, decrypt and start tinyMCE
   b) if password was already set, then TinyMCE will be shown
 

# Show without admin rights

Must have a "decrypt" button in view: skin/default.php
If clicked, then decrypt on client. Do *not* decrypt in WidgetController.generateHTML() !




# Coding style

Look at TODOs :-(
Refactor the UI garbage out of IpEncryptionSection.js  (maybe use IpForms) 